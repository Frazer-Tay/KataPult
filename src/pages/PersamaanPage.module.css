/* src/pages/PersamaanPage.module.css */

/* Base container */
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 25px 20px 40px 20px;
  max-width: 720px; /* Consistent width */
  min-height: 75vh;
  margin: 30px auto;
  background-color: var(--card-background);
  border-radius: var(--border-radius-xl);
  box-shadow: 0 8px 30px var(--shadow-color);
  border: 1px solid var(--border-color-light);
  position: relative;
}

/* Progress Bar Container */
.progressBarContainer {
    width: 95%;
    margin-bottom: 30px;
}


/* Card holding the main word */
.card {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-light) 100%);
  border-radius: var(--border-radius-lg); /* More rounded */
  padding: 35px 40px;
  width: 100%;
  text-align: center;
  margin-top: 10px; /* Space below progress */
  margin-bottom: 40px; /* More space below */
  box-sizing: border-box;
  box-shadow: inset 0 -4px 10px rgba(0, 0, 0, 0.15); /* Deeper inner shadow */
  color: white;
}

.label {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.9); /* Brighter label */
  margin-bottom: 8px;
  font-weight: 500; /* Medium weight */
}

.word {
  font-size: 2.8rem; /* Large word */
  font-weight: 700;
  color: #ffffff;
  margin-top: 5px;
  letter-spacing: 0.5px;
  word-wrap: break-word;
  text-shadow: 1px 1px 3px rgba(0,0,0,0.2); /* Subtle text shadow */
}

/* Options container */
.optionsContainer {
  width: 100%;
  max-width: 600px; /* Consistent max width */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 18px; /* Slightly more gap */
  margin-bottom: 30px;
}

/* Instruction Text */
.instruction {
  font-size: 1.2rem;
  margin-bottom: 25px; /* More space */
  color: var(--text-dark);
  font-weight: 600;
  text-align: center;
}

/* --- Option Button Styling --- */
.optionButton {
  position: relative;
  padding: 16px 25px 16px 60px; /* More vertical padding */
  font-size: 1.1rem;
  color: var(--text-dark);
  background-color: var(--card-background); /* White */
  border: 2px solid var(--border-color); /* Standard border */
  border-radius: var(--border-radius-lg); /* Rounded */
  cursor: pointer;
  transition: all 0.25s ease-in-out;
  width: 100%;
  text-align: left;
  box-sizing: border-box;
  font-weight: 500;
  box-shadow: var(--shadow-xs);
}

.optionButton:hover:not(:disabled) {
  background-color: #f1f9ff; /* Very light blue hover */
  border-color: var(--secondary-color); /* Blue border on hover */
  box-shadow: var(--shadow-sm);
  transform: translateY(-3px); /* Enhanced lift */
}

.optionButton:focus {
    outline: none;
    border-color: var(--secondary-color);
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
}

.optionButton:disabled {
  cursor: not-allowed;
}

/* Icon Styling */
.optionButton::before {
    content: '';
    font-family: 'Segoe UI Symbol', sans-serif;
    position: absolute;
    left: 22px; /* Consistent icon position */
    top: 50%;
    transform: translateY(-50%) scale(0.8);
    font-size: 1.6rem;
    font-weight: bold;
    transition: all 0.25s ease-in-out;
    opacity: 0;
}

/* Correct State */
.optionButton.correct {
  background-color: var(--success-light);
  border-color: var(--success-color);
  color: var(--success-dark);
  font-weight: 600;
  opacity: 1 !important;
}
.optionButton.correct::before {
    content: '✓';
    color: var(--success-color);
    opacity: 1;
    transform: translateY(-50%) scale(1.2); /* Pop effect */
}

/* Incorrect State (Selected) */
.optionButton.incorrect {
  background-color: var(--error-light);
  border-color: var(--error-color);
  color: var(--error-dark);
  font-weight: 600;
  opacity: 1 !important;
}
.optionButton.incorrect::before {
    content: '✗';
    color: var(--error-color);
    opacity: 1;
    transform: translateY(-50%) scale(1.2); /* Pop effect */
}

/* Disabled State (non-selected incorrect) */
.optionButton.disabled {
    background-color: #f8f9fa;
    border-color: #e9ecef;
    color: #adb5bd;
    opacity: 0.55; /* More subtle fade */
    box-shadow: none;
    transform: none;
}
.optionButton.disabled:hover { transform: none; box-shadow: none; }
.optionButton.disabled::before { display: none; }
.optionButton.correct.disabled::before {
    display: block;
    opacity: 1;
    transform: translateY(-50%) scale(1.2);
}

.optionText { display: inline-block; }

/* Feedback Area */
.feedback {
  font-size: 1.1rem;
  font-weight: 500;
  margin: 10px 0 20px 0; /* Adjusted margin */
  padding: 15px 20px;
  border-radius: var(--border-radius-md);
  width: 95%;
  max-width: 600px; /* Consistent width */
  text-align: center;
  box-sizing: border-box;
  border-width: 1px;
  border-style: solid;
  line-height: 1.6;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}
.feedback::before {
    font-family: 'Segoe UI Symbol', sans-serif;
    font-size: 1.3rem; /* Consistent icon size */
    line-height: 1;
}
.correctFeedback {
  color: #0a3622;
  background-color: var(--success-light);
  border-color: #a3cfbb;
}
.correctFeedback::before { content: '✓'; }
.incorrectFeedback {
  color: #58151c;
  background-color: var(--error-light);
  border-color: #f1b0b7;
}
.incorrectFeedback::before { content: '✗'; }


/* Uses global button styles from App.css for Next/Completion */
.completionActions {
    display: flex;
    gap: 15px;
    margin-top: 15px;
    justify-content: center;
    flex-wrap: wrap;
}

/* Loading, Error, Completion Messages use global styles */