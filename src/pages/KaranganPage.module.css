/* src/pages/KaranganPage.module.css */
/* Styles adapted from PersamaanPage.module.css - adjust as needed */

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 25px 20px 40px 20px;
  max-width: 800px; /* Allow wider */
  min-height: 75vh;
  margin: 30px auto;
  background-color: var(--card-background);
  border-radius: var(--border-radius-xl);
  box-shadow: 0 8px 30px var(--shadow-color);
  border: 1px solid var(--border-color-light);
  position: relative;
}

/* Progress Bar Container */
/* Uses component styles */

.card {
  background-color: #f8f9fc;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-lg);
  padding: 35px 40px;
  width: 100%;
  text-align: center;
  margin-top: 10px; /* Space below progress */
  margin-bottom: 30px;
  box-sizing: border-box;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.04);
}

.word {
  font-size: 2.8rem;
  font-weight: 700;
  color: var(--primary-dark);
  margin-bottom: 18px;
  padding-bottom: 8px;
  border-bottom: 3px solid var(--accent-color);
  display: inline-block;
  line-height: 1.3;
}

/* Synonym Section */
.synonymSection {
    margin-top: 25px;
    padding-top: 20px;
    border-top: 1px dashed var(--border-color);
    text-align: center;
}

.synonymLabel {
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-light);
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.synonymText {
    font-size: 1.05rem;
    color: var(--text-medium);
    line-height: 1.65;
    font-style: italic;
    background-color: #fff;
    padding: 10px 18px;
    border-radius: var(--border-radius-md);
    display: inline-block;
    border: 1px solid var(--border-color-light);
    max-width: 90%;
}

/* Options */
.optionsContainer {
  width: 100%;
  max-width: 700px; /* Adjusted width */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 18px;
  margin-top: 15px;
  margin-bottom: 30px;
}

.instruction {
  font-size: 1.25rem;
  margin-bottom: 25px;
  color: var(--text-dark);
  font-weight: 600;
  text-align: center;
}

/* Option Buttons */
.optionButton {
  position: relative;
  padding: 16px 25px 16px 60px;
  font-size: 1rem;
  line-height: 1.6;
  color: var(--text-dark);
  background-color: #ffffff;
  border: 2px solid var(--border-color);
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.20s ease-in-out;
  width: 100%;
  text-align: left;
  box-sizing: border-box;
  font-weight: 400; /* Normal weight for definitions */
  box-shadow: var(--shadow-xs);
}

.optionButton:hover:not(:disabled) {
  background-color: #f1f3f5;
  border-color: var(--primary-color);
  box-shadow: var(--shadow-sm);
  transform: translateY(-2px);
}

.optionButton:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(74, 85, 162, 0.25);
}

.optionButton:disabled { cursor: not-allowed; }

/* Button Icons */
.optionButton::before {
    content: '';
    font-family: 'Segoe UI Symbol', sans-serif;
    position: absolute;
    left: 20px;
    top: 50%;
    transform: translateY(-50%) scale(0.8);
    font-size: 1.6rem;
    font-weight: bold;
    transition: all 0.25s ease-in-out;
    opacity: 0;
}

.optionButton.correct {
  background-color: var(--success-light);
  border-color: var(--success-color);
  color: #0a3622;
  font-weight: 500;
  opacity: 1 !important;
}
.optionButton.correct::before {
    content: '✓';
    color: var(--success-color);
    opacity: 1;
    transform: translateY(-50%) scale(1.15);
}

.optionButton.incorrect {
  background-color: var(--error-light);
  border-color: var(--error-color);
  color: #58151c;
  font-weight: 500;
  opacity: 1 !important;
}
.optionButton.incorrect::before {
    content: '✗';
    color: var(--error-color);
    opacity: 1;
    transform: translateY(-50%) scale(1.15);
}

.optionButton.disabled {
    background-color: #f8f9fa;
    border-color: #e9ecef;
    color: #adb5bd;
    opacity: 0.6;
    box-shadow: none;
    transform: none;
}
.optionButton.disabled:hover { transform: none; box-shadow: none; }
.optionButton.disabled::before { display: none; }
.optionButton.correct.disabled::before {
    display: block;
    opacity: 1;
    transform: translateY(-50%) scale(1.15);
}

.optionText { display: inline-block; }

/* Feedback Area */
.feedback {
  font-size: 1.05rem;
  font-weight: 500;
  margin: 10px 0 20px 0;
  padding: 15px 20px;
  border-radius: 8px;
  width: 95%;
  max-width: 650px; /* Wider feedback */
  text-align: center;
  box-sizing: border-box;
  border-width: 1px;
  border-style: solid;
  line-height: 1.6;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}
.feedback::before {
    font-family: 'Segoe UI Symbol', sans-serif;
    font-size: 1.2rem;
    line-height: 1;
}
.correctFeedback {
  color: #0f5132;
  background-color: var(--success-light);
  border-color: #badbcc;
}
.correctFeedback::before { content: '✓'; }
.incorrectFeedback {
  color: #842029;
  background-color: var(--error-light);
  border-color: #f5c2c7;
}
.incorrectFeedback::before { content: '✗'; }

/* Loading, Completion, Error States & Buttons use global styles */
/* Completion Actions uses global style */
.completionActions {
    display: flex;
    gap: 15px;
    margin-top: 15px;
    justify-content: center;
    flex-wrap: wrap;
}